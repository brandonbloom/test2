=== Test2 Spec (1.0)

Tests are broken down into the following responsibilities:

- Defining tests
  - Making assertions within them

- Finding tests
  - Filtering which ones to run
  - Running them
  - Reporting the results

This breaks down into four roles: Definer, Asserter, Runner, Reporter.





== Definer

There are just helpers to create test-fns. They're optional since it's
pretty easy to make a test-fn with just (defn ^:test some-test [] ...)


== Asserters

During execution of a test-fn, `*test-results*` is a ref to a
seq. Asserters are helper functions that should take some assertion,
evaluate it, and conj an assertion-result onto it.

Note: if an unexpected error occurred (not specified by the
assertion), the assertion-result's :status should be :error.


== Runner

A runner is a function that takes a seq of test-fns and returns a seq
of test-results.

(TODO: should the return-value be a lazy-seq? That would make
command-line reporters report sooner. But should it be in the spec?)

Runners are responsible for filtering tests and deciding which ones to run.

A runner is responsible for filtering tests and running them, which
means transl them into test-results.





== test-fn

Any Clojure function in your project that has a truthy `:test`
metadata key is a test-fn. If it has a docstring, that will be
considered its "description" for the reporter.


== assertion-result

An assertion-result is a Clojure map with these keys and values:

:status
  (Required, Keyword)
  :pass if the test passed
  :fail if the assertion failed
  :error *only* if there was an *unexpected* exception

:description
  (Optional, String)
  For the reporter to know what the assertion is testing

:error
  (Required when status is :error, Exception)
  The exception that unexpectedly occurred

:failure-report
  (Required when status is :fail, Map)
  Has the following keys:

    :result
    (Required, any type)
    The result of the assertion

    :fn
    (Required, raw form)
    The literal callable-form that was used in the assertion

    :args
    (Required, seq of any types)
    The args after they were evaluated in the assertion

    :raw-args
    (Required, seq of raw forms)
    The args before they were evaluated in the assertion


== test-result

A test-result is a Clojure map with these keys and values:

:results
  (Required, seq of assertion-results)
  Results of every assertion in the function.

:test
  (Required, Var)
  The test-fn's var.
